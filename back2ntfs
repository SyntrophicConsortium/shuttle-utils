#!/bin/bash

#
# Back2NTFS 
# by Andy Forceno <andy@aurorabox.tech>
#
# Tar /home/user and /etc on many remote hosts
# Copy to an NTFS NAS device & create and verify SHA1 checksums
# To be run bi-weekly via cron
#

# Location of local disk copy of repo
BASEDIR="$HOME/scripts/bin"

# Location to log to on each host specified in hosts_check
CONFIG_PATH="$HOME/.config/shuttle-utils"

# Path to backup dir
BACKUP_PATH="/media/andy/external/Backups"

# TODO: Add TARGET_DIRS array eventually
# TARGET_DIRS=("/home/andy" "/etc")

# Check if machines are available before updating
source "$BASEDIR"/hosts_check

# Remove Hostname from hosts array, it has no hard disks
# HOSTS=($(echo "${HOSTS[@]}" | sed -e "s/Hostname//g"))

echo -e "$0: ***** Begin back2ntfs.sh *****\n"
echo -e "$0: See "$CONFIG_PATH/back2ntfs-$(date +%m%d%y).log" on each host for individual backup logs"

for i in "${HOSTS[@]}"; do
  echo "Connecting to: $i"
  # Pass locally-declared vars to remote host
  ssh "$i" LC_0="$0" LC_i="$i" LC_basedir="$BASEDIR" LC_config_path="$CONFIG_PATH" LC_backup_path="$BACKUP_PATH" bash -x << 'EOF' 

  # If $CONFIG_PATH doesn't exist, create it
  if [ ! -d "$LC_config_path" ]; then
    mkdir "$LC_config_path"
  fi
# Create the log file
  touch "$LC_config_path"/back2ntfs-$(date +%m%d%y).log

  # Backup /home/andy
  echo -e "$LC_0: $LC_i: Creating tar file of /home/andy in "$LC_backup_path"/"$LC_i"...\n" >> "$LC_config_path"/back2ntfs-$(date +%m%d%y).log
  sudo touch "$LC_backup_path"/"$LC_i"/home-$(date +%m%d%y).tar >> "$LC_config_path"/back2ntfs-$(date +%m%d%y).log
  # Exclude caches, and most folders that begin with a dot
  # INFO: You should edit the contents of .excludes in your local copy of shuttle-utils to match the correct paths on your device
  tar -X "$LC_basedir"/.excludes --exclude-caches-all -cvPf "$LC_backup_path"/"$LC_i"/home-$(date +%m%d%y).tar /home/andy >> "$LC_config_path"/back2ntfs-$(date +%m%d%y).log && wait
  # SHA1 checksum creation is now done in the loop below
  # sha1sum "$LC_backup_path"/"$LC_i"/home-$(date +%m%d%y).tar > "$LC_backup_path"/"$LC_i"/home-$(date +%m%d%y).tar.sha1 >> "$LC_config_path"/back2ntfs-$(date +%m%d%y).log 

  # Backup /etc
  echo -e "$LC_0: $LC_i: Creating tar file of /etc in "$LC_backup_path"/"$LC_i"...\n" >> "$LC_config_path"/back2ntfs-$(date +%m%d%y).log
# TODO: Log file is not created on some hosts (permissions issue?)
  sudo touch "$LC_backup_path"/"$LC_i"/etc-$(date +%m%d%y).tar >> "$LC_config_path"/back2ntfs-$(date +%m%d%y).log
  sudo tar --exclude-caches-all -cvPf "$LC_backup_path"/"$LC_i"/etc-$(date +%m%d%y).tar /etc >> "$LC_config_path"/back2ntfs-$(date +%m%d%y).log && wait
 # sha1sum "$LC_backup_path"/"$LC_i"/etc-$(date +%m%d%y).tar > "$LC_backup_path"/"$LC_i"/etc-$(date +%m%d%y).tar.sha1 >> "$LC_config_path"/back2ntfs-$(date +%m%d%y).log
EOF

  # Location of backups on host executing back2ntfs 
  # In my case this is different than the location on remote hosts
  cd /media/external/Backups/"$i"/
  # Find and delete .tar and .sha1 files older than 2 months (should preserve 1 old backup)
  echo "$LC_0: Deleting old backups..."
  find . -type f \( -iname \*.tar -o -iname \*.sha1 \) -mtime +60 -exec rm -i -f {} \+ 

  ## Create and verify SHA1 checksums for new backups 
  for j in $(find . -name '*.tar'); do
    echo "$LC_0: Creating SHA1 checksum of "$BACKUP_PATH"/"$i"/$(echo "$j" | sed -e 's#\.\/##g')..."
    sha1sum "$j" > "$j.sha1" && wait
    echo "$LC_0: Verifying SHA1 checksum of "$BACKUP_PATH"/"$i"/$(echo "$j" | sed -e 's#\.\/##g')..."
    sha1sum -c "$j.sha1" && wait $!
    
    if [[ "$?" = "1" ]]; then
      /usr/bin/shuttle -p -n all "$i: Bad checksum!" "$j failed checksum verification at $(echo "$(date +%R) on $(date +%m-%d-%y)")"
    fi
  done
done

echo -e "$0: ***** End back2ntfs.sh ***** Goodbye!\n"

